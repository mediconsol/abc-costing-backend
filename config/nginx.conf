# Nginx configuration for ABC Costing Backend
# Optimized for production deployment with security and performance features

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Performance tuning
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Hide Nginx version
    server_tokens off;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        text/plain
        text/css
        text/xml
        text/javascript
        application/xml
        application/rss+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=export_limit:10m rate=2r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Upstream Rails application
    upstream abc_costing_backend {
        server web:3000 max_fails=3 fail_timeout=30s;
        # Add more servers for load balancing if needed
        # server web2:3000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name api.yourdomain.com yourdomain.com;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # Security configurations
        client_max_body_size 10M;
        client_body_buffer_size 128k;
        client_header_buffer_size 3m;
        large_client_header_buffers 4 256k;

        # Connection limits
        limit_conn addr 10;

        # Default location - block direct access
        location / {
            return 404;
        }

        # API endpoints
        location /api/ {
            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;
            
            # Security headers specific to API
            add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none';" always;
            
            # CORS headers (if needed)
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "$http_origin" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Access-Control-Max-Age 86400 always;
                return 204;
            }

            # Proxy to Rails application
            proxy_pass http://abc_costing_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Timeout settings for long-running calculations
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s; # 5 minutes for ABC calculations
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Authentication endpoints with stricter rate limiting
        location /api/v1/auth/ {
            limit_req zone=auth_limit burst=10 nodelay;
            
            proxy_pass http://abc_costing_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Shorter timeouts for auth requests
            proxy_connect_timeout 10s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
        }

        # Export endpoints with very strict rate limiting
        location /api/v1/reports/export {
            limit_req zone=export_limit burst=5 nodelay;
            
            proxy_pass http://abc_costing_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeouts for export generation
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 600s; # 10 minutes for report generation
        }

        # File download endpoints
        location /exports/ {
            # Authenticate requests through Rails first
            auth_request /auth;
            
            # Serve files directly from nginx for performance
            alias /rails/tmp/exports/;
            
            # Security headers for file downloads
            add_header Content-Disposition "attachment" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # Cache control for export files
            expires 1h;
            add_header Cache-Control "private, no-transform";
        }

        # Internal auth endpoint for file downloads
        location = /auth {
            internal;
            proxy_pass http://abc_costing_backend/api/v1/auth/verify;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }

        # Health check endpoint
        location /up {
            proxy_pass http://abc_costing_backend;
            proxy_set_header Host $host;
            
            # Quick timeouts for health checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            
            # No logging for health checks
            access_log off;
        }

        # Sidekiq Web UI (if enabled)
        location /sidekiq {
            # Restrict access by IP (uncomment and modify as needed)
            # allow 192.168.1.0/24;
            # deny all;
            
            proxy_pass http://abc_costing_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(sql|log|conf)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
            return 404 '{"error": "Not found"}';
            add_header Content-Type application/json always;
        }
        
        location = /50x.html {
            internal;
            return 500 '{"error": "Internal server error"}';
            add_header Content-Type application/json always;
        }

        # Security response for blocked requests
        location = /blocked {
            internal;
            return 429 '{"error": "Rate limit exceeded"}';
            add_header Content-Type application/json always;
        }
    }

    # Monitoring endpoints (internal access only)
    server {
        listen 127.0.0.1:8080;
        server_name localhost;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        location /metrics {
            # Prometheus metrics endpoint if needed
            access_log off;
            allow 127.0.0.1;
            deny all;
            return 200 "# Nginx metrics endpoint\n";
            add_header Content-Type text/plain;
        }
    }
}

# Stream configuration for load balancing (if needed)
stream {
    upstream postgres_backend {
        server postgres:5432;
    }

    upstream redis_backend {
        server redis:6379;
    }

    # PostgreSQL proxy (for database monitoring tools)
    server {
        listen 15432;
        proxy_pass postgres_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_bind $remote_addr transparent;
    }

    # Redis proxy (for monitoring tools)
    server {
        listen 16379;
        proxy_pass redis_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_bind $remote_addr transparent;
    }
}