name: Deploy to Railway

on:
  push:
    branches: [main, production]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: abc_costing_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.7
          bundler-cache: true

      - name: Set up test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgresql://postgres:password@localhost:5432/abc_costing_test
          REDIS_URL: redis://localhost:6379/0
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgresql://postgres:password@localhost:5432/abc_costing_test
          REDIS_URL: redis://localhost:6379/0
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          bundle exec rspec

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway up --service abc-costing-web

      - name: Deploy Sidekiq Worker
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway up --service abc-costing-sidekiq

      - name: Health Check
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          sleep 30  # Wait for deployment
          # Get the deployment URL from Railway
          DEPLOY_URL=$(railway status --service abc-costing-web --json | jq -r '.deployments[0].url')
          
          # Health check
          if curl -f "${DEPLOY_URL}/up"; then
            echo "‚úÖ Deployment successful!"
          else
            echo "‚ùå Deployment health check failed"
            exit 1
          fi

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Deployment Status
        if: github.ref == 'refs/heads/main'
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "üéâ ABC Costing Backend successfully deployed to Railway!"
          else
            echo "‚ùå Deployment failed. Check logs for details."
          fi